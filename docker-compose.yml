version: '3.8'

services:
  backend-dev:
    container_name: cua-backend-dev
    build:
      context: .
      target: development
      dockerfile: ./Dockerfile
    command: npm run start:debug
    env_file:
      - .env
      - db.env
    environment:
      - NODE_ENV=development
      - POSTGRES_DB=cua_dev
    ports:
      - 3000:3000
    networks:
      - api-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    depends_on:
      - database

  backend-prod:
    container_name: cua-backend-prod
    build:
      context: .
      target: production
      dockerfile: ./Dockerfile
    command: npm run start:prod
    env_file:
      - .env
      - db.env
    environment:
      - NODE_ENV=production
      - POSTGRES_DB=cua_prod
    ports:
      - 3000:3000
    networks:
      - api-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    depends_on:
      - database

  database:
    image: postgres
    env_file:
      - db.env
    environment:
      - POSTGRES_MULTIPLE_DATABASES=cua_dev,cua_prod
    restart: unless-stopped
    networks:
      - api-network
    ports:
      - 5432:5432
    volumes:
      - ./pg-init-scripts:/docker-entrypoint-initdb.d
      - pgsql-data:/var/lib/postgresql/data

networks:
  api-network:

volumes:
  pgsql-data:
